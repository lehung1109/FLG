<?php 
function sentius_menu(){
  $items = array();
  $items['sentiusajax'] = array(
      'title' => t(''),
      'page callback' => '_sentius_ajax',
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK
    );
  $items['share'] = array(
      'title' => t(''),
      'page callback' => '_sentius_share',
      'access arguments' => array('access content'),
      'type' => MENU_LOCAL_TASK
    );
  $items['user/%user/archive'] = array(
      'title' => t('Archive'),
      'page callback' => '_sentius_archives',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_LOCAL_TASK,
    );
  return $items;
}
function _sentius_check_access($nid){

  global $user;
  $return = true;
  $user = user_load($user->uid);
  if(count($user->field_access)>0){
    //print_r($user->field_access['und']);
      foreach($user->field_access['und'] as $row){
        if($row['value'] == $nid){
          $return = false;
        }
      }
  }
  return $return;
}
function _sentius_insert_access($nid){
  global $user;
  
  $user = user_load($user->uid);

  if(count($user->field_access)>0){
    $count = count($user->field_access['und']);
    $user->field_access['und'][$count + 1]['value'] = $nid;
  }else{
    $user->field_access['und'][0]['value'] = $nid;
  }
  user_save($user);
 
  return true;
}

function _sentius_archives(){
   $data = array();
   return theme('block_archive_noti', array('data' => $data));
}
function _sentius_share(){

  return "";
}
function _sentius_ajax(){
  global $user;
  if(isset($_GET['action'])){


    //reorderArtist
    if($_GET['action'] == 'reorderArtist'){
      $list = $_GET['list'];
      if(count($list)>0){
        $count = 0;
        foreach($list as $row){
          $node = node_load($row);
          $node->field_weight['und'][0]['value'] = $count;
          node_save($node);
          $count ++;
        }
      }

    }

    if($_GET['action'] == 'reorderArt'){
      $list = $_GET['list'];
      if(count($list)>0){
        $count = 0;
        foreach($list as $row){

           db_update('favouries_custom')
            ->fields(array(
              'weight' => $count ,
            ))
            ->condition('nid',$row)
            ->condition('uid',$user->uid)
            ->execute();
          $count ++;
        }
      }

    }
    if($_GET['action'] == 'getTaxo'){
        $tid = $_GET['tid']; 
        $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name
FROM 
{taxonomy_term_data} taxonomy_term_data
LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
LEFT JOIN {field_data_field_author} field_data_field_author ON taxonomy_term_data.tid = field_data_field_author.entity_id AND (field_data_field_author.entity_type = 'taxonomy_term' AND field_data_field_author.deleted = '0')
WHERE (( (taxonomy_vocabulary.machine_name IN  ('tags_artwork')) AND (taxonomy_term_data.tid != '".$tid."') AND (field_data_field_author.field_author_value = '".$user->uid."') ))
LIMIT 50 OFFSET 0";
        $query = db_query($sql);
        $html = '<select id="choose_folder">';
        foreach($query as $row){

           $html .= '<option value="'.$row->tid.'">'.$row->taxonomy_term_data_name.'</option>';
        }
        $html .= '<select>';
        echo $html;
        die;
    }

    if($_GET['action'] == 'sendmail'){

      
      $email = $_GET['email'];
      $tid  = $_GET['tid'];
      // '<p>My favorites folder from flg.com.au </p>' .  $html ;
      $data = sentius_getALlFavorites($tid,$user->uid);
      $data['name'] = taxonomy_term_load($tid)->name;
      $body = theme('share_templates', array('data' => $data));
     
      $from = $user->mail;

      $my_module = 'sentius';

      $from = variable_get('system_mail', 'sentius.dev@gmail.com');
                $message = array(
                      'id' => $my_module,
                      'from' => $from,
                      'to' => $email,
                      'subject' => 'My folder: '.$data['name'],
                      'body' => $body,
                      'headers' => array(
                        'From' => $from, 
                        'Sender' => $from, 
                        'Return-Path' => $from,
                        'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
                      ),
                    );

                  $system = drupal_mail_system($my_module);
                  if ($system->mail($message)) {
                    // Success.
                    echo 'success';
                  }else{
                    echo 'fail';
                  }

      die;
    }
  }

  if(isset($_GET['action'])){
    global $user;
    if($_GET['action'] == 'addFavourites'){
      if(isset($_GET['tid'])){
          
          $tid = $_GET['tid'];
          $nid = $_GET['nid'];
          $uid = $user->uid;
          $check = sentius_checkFavorites($nid,$tid);
          if($check == 0){
            sentius_addFavorites($nid,$tid);
            echo 'Success';
            die;
          }else{
            echo 'Unsuccess';
            die;
          }
      }
    }
    if($_GET['action'] == 'removeFavourites'){
      $nid = $_GET['nid'];
      $tid = $_GET['tid'];
      sentius_removeFavorites($nid,$tid);
      echo 'Success';
      die;
    }


    if($_GET['action'] == 'removeTid'){

      $tid = $_GET['tid'];
      if($tid != 42){
        if($_GET['movetid'] != ''){
            db_update('favouries_custom')
            ->fields(array(
              'tid' => $_GET['movetid'],
            ))
            ->condition('tid',$tid)
            ->condition('uid',$user->uid)
            ->execute();
             
        }else{
           db_delete('favouries_custom')
            ->condition('tid',$tid)
            ->condition('uid',$user->uid)
            ->execute();
           
        }
        taxonomy_term_delete($tid);


      }
     

      echo 'sucess';
      die;
    }
  }
  

}
function sentius_inline_entity_form_table_fields_alter(&$fields, $context) {
  


}
// get all custom taxonomy
function sentius_getTaxonomy(){
  global $user;


  $sql = "SELECT taxonomy_term_data.name AS taxonomy_term_data_name, taxonomy_term_data.vid AS taxonomy_term_data_vid, taxonomy_term_data.tid AS tid, taxonomy_vocabulary.machine_name AS taxonomy_vocabulary_machine_name, taxonomy_term_data.weight AS taxonomy_term_data_weight
FROM 
{taxonomy_term_data} taxonomy_term_data
LEFT JOIN {field_data_field_author} field_data_field_author ON taxonomy_term_data.tid = field_data_field_author.entity_id AND (field_data_field_author.entity_type = 'taxonomy_term' AND field_data_field_author.deleted = '0')
LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
WHERE (( (field_data_field_author.field_author_value = '".$user->uid."') )AND(( (taxonomy_term_data.vid IN  ('12')) )))
ORDER BY taxonomy_term_data_weight ASC";
    $data = array();
    $newterm = new stdClass();
    $newterm->taxonomy_term_data_name = 'Favourites';
    $newterm->tid  = 42;
    $data[] =  $newterm;
    $query = db_query($sql);
    foreach($query as $row){
      $data[] = $row;
    } 
  return $data;

}

// get all Favorites

function sentius_getALlFavorites($tid='',$uid){
 // global $user;
  $data = array();
  if($tid!= ''){

    $sql = "select DISTINCT(`nid`) as nid from {favouries_custom} WHERE `uid`= '".$uid."' AND `tid`='".$tid."' ORDER BY `weight` ASC";
  }else{
    $sql = "select DISTINCT(`nid`) as nid from {favouries_custom} WHERE `uid`= '".$uid."' AND `tid`='42' ORDER BY `weight` ASC";
  }

  $query = db_query($sql);
  foreach($query as $row){
    $data[] = $row;
  }
  return $data;

}

// check Favorites

function sentius_checkFavorites($nid,$tid){
  global $user;
  $sql = "select count(`id`) as count from {favouries_custom} WHERE `uid`= '".$user->uid."' AND `nid` = '".$nid."'  AND `tid` = '".$tid."' LIMIT 1";
  $query = db_query($sql)->fetchField();
  return $query;

}

// add favourites
function sentius_addFavorites($nid,$tid){
  global $user;
  $data = array(
    'tid' => $tid,
    'uid' => $user->uid,
    'nid' => $nid,
  );
 return db_insert('favouries_custom')->fields($data)->execute(); 
}
// remove favourites
function sentius_removeFavorites($nid,$tid){
  global $user;
  return db_delete('favouries_custom')
  ->condition('nid',$nid)
  ->condition('uid',$user->uid)
  ->condition('tid',$tid)
  ->execute();
 //return db_insert('favouries_custom')->fields($data)->execute(); 
}

// get all exhibition by artisid;
function sentius_getExByAid($artistId){
	$now = date('Y-m-d');
  	$sql = "SELECT node.title AS node_title, node.nid AS nid, field_data_field_exibition_date.delta AS field_data_field_exibition_date_delta, field_data_field_exibition_date.language AS field_data_field_exibition_date_language, field_data_field_exibition_date.bundle AS field_data_field_exibition_date_bundle, field_data_field_exibition_date.field_exibition_date_value AS field_data_field_exibition_date_field_exibition_date_value, field_data_field_exibition_date.field_exibition_date_value2 AS field_data_field_exibition_date_field_exibition_date_value2, field_data_field_exibition_date.revision_id AS field_data_field_exibition_date_revision_id, node.changed AS node_changed, 'node' AS field_data_field_exibition_date_node_entity_type
FROM 
{node} node
INNER JOIN {field_data_field_show_as} field_data_field_show_as ON node.nid = field_data_field_show_as.entity_id AND (field_data_field_show_as.entity_type = 'node' AND field_data_field_show_as.deleted = '0')
LEFT JOIN {field_data_field_artists_featured} field_data_field_artists_featured ON node.nid = field_data_field_artists_featured.entity_id AND (field_data_field_artists_featured.entity_type = 'node' AND field_data_field_artists_featured.deleted = '0')
LEFT JOIN {field_data_field_exibition_date} field_data_field_exibition_date ON node.nid = field_data_field_exibition_date.entity_id AND (field_data_field_exibition_date.entity_type = 'node' AND field_data_field_exibition_date.deleted = '0')
WHERE (( (node.status = '1') AND (node.type IN  ('exhibition')) AND (field_data_field_show_as.field_show_as_tid = '35') AND (field_data_field_artists_featured.field_artists_featured_target_id = '".$artistId."') ))
ORDER BY field_data_field_exibition_date_field_exibition_date_value ASC, node_changed ASC";
   
	
    $data = array();
    $query = db_query($sql);
    foreach($query as $row){
      $data[] = $row;
    } 
  return $data;
}

// get art node by artisid;
function sentius_checkNewestNode($artistId){
  $sql = "SELECT node.created AS node_created, node.nid AS nid FROM  {node} node LEFT JOIN {field_data_field_artist} field_data_field_artist ON node.nid = field_data_field_artist.entity_id AND (field_data_field_artist.entity_type = 'node') 
WHERE (( (node.status = '1') AND (node.type IN  ('art')) AND (field_data_field_artist.field_artist_nid IN  ('".$artistId."')) )) ORDER BY node_created DESC LIMIT 1 ";
  $data = array();
    $query = db_query($sql);
    foreach($query as $row){
      $data[] = $row;
    } 
  return $data;
}

// get news node by artisid;
function sentius_NewsNode($artistId){
  $sql = "SELECT node.created AS node_created, node.nid AS nid
FROM 
{node} node
LEFT JOIN {field_data_field_artist} field_data_field_artist ON node.nid = field_data_field_artist.entity_id AND (field_data_field_artist.entity_type = 'node' AND field_data_field_artist.deleted = '0')
WHERE (( (node.status = '1') AND (node.type IN  ('news')) AND (field_data_field_artist.field_artist_nid IN  ('".$artistId."')) ))
ORDER BY node_created DESC
LIMIT 1 OFFSET 0";
  $data = array();
    $query = db_query($sql);
    foreach($query as $row){
      $data[] = $row;
    } 
  return $data;
}
//
function sentius_getUserFollow($nid){
  $data = array();
  $sql = "SELECT `uid` from {flagging} WHERE `entity_id` = '".$nid."' ";

  $query  = db_query($sql);
  foreach($query as $row){
    $data[] = $row->uid;
  }
  return $data;
}

function sentius_mail_notifi($uid,$body){
  global $base_url;
  $user = user_load($uid);
  $my_module = 'sentius';

  $body = $body;
  $from = variable_get('system_mail', 'sentius.dev@gmail.com');
            $message = array(
                  'id' => $my_module,
                  'from' => $from,
                  'to' => $user->mail,
                  'subject' => 'FLG Notification',
                  'body' => $body,
                  'headers' => array(
                    'From' => $from, 
                    'Sender' => $from, 
                    'Return-Path' => $from,
                    'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
                  ),
                );

              $system = drupal_mail_system($my_module);
              if ($system->mail($message)) {
                // Success.
              }
}
//hook node insert
function sentius_checkFavorites_folder($nid) {
  global $user;
  $sql = "select count(`id`) as count from {favouries_custom} WHERE `uid`= '".$user->uid."' AND `nid` = '".$nid."'  AND `tid` = '42' LIMIT 1";
  $query = db_query($sql)->fetchField();
  return $query;
}
// insert to custom table
function sentius_insert_custom_notify($nid,$uid,$status=0){
  

  if($status != 0){
     $data = array(
      'uid' => $uid,
      'nid' => $nid,
      'daycreate'=>time(),
      'status'=> $status,
      'sendat'=> ''
    );
  }else{
     $data = array(
      'uid' => $uid,
      'nid' => $nid,
      'daycreate'=>time(),
      'status'=> $status
    );
  }
  return db_insert('notify_custom')
    ->fields($data)
    ->execute();

}

// get all node base on user
function sentius_get_all_node_create($day){
  $data = array();
  $dayAgo = strtotime('-'.$day.' days');

  $sql = "SELECT * FROM {notify_custom} WHERE `daycreate` < '".$dayAgo."' AND `sendat` is null ";
 
  $query = db_query($sql);
  foreach($query as $row){
    $data[] = $row;
  }
  return $data;
}
function sentius_sendmail_remind($day,$uid){
  $body = '';
  $nodes = sentius_get_all_node_create($day);


  global $base_url;
  if(count($nodes)>0){
    foreach($nodes as $row){
    
      $node  = node_load($row->nid);
      $url  = $base_url.url('node/'.$row->nid);
      $create = date('d-m-Y H:i:s',$node->created);
      $body .= "A record <a href='".$url."'>".$node->title."</a> has been created at ".$create."<br/>";
      db_update('notify_custom') // Table name no longer needs {}
                ->fields(array('status' => 1,'sendat'=>time()))
                ->condition('uid', $uid, '=')
                ->condition('nid', $row->nid, '=')
                ->execute();

    }
  }
  return $body;
}
// get all log

function sentius_get_archive(){
  global $user;
  $sql = "SELECT * FROM {notify_custom} WHERE uid = '".$user->uid."' AND `status` = '1'";
  $data = array();
  $query  = db_query($sql);
  foreach($query as $row){
    $data[] =  $row;
  }
  return $data;
}


// get listuser to send mail
function sentius_get_user(){
  $data = array();
  $sql = "SELECT users.name AS users_name, users.uid AS uid, users.created AS users_created
FROM 
{users} users
LEFT JOIN {field_data_field_send_notification} field_data_field_send_notification ON users.uid = field_data_field_send_notification.entity_id AND (field_data_field_send_notification.entity_type = 'user' AND field_data_field_send_notification.deleted = '0')
WHERE (( (users.status <> '0') AND (field_data_field_send_notification.field_send_notification_value IS NOT NULL ) ))
ORDER BY users_created DESC";
  $query = db_query($sql);
  foreach($query as $row){
    $data[] = $row->uid;
  }
  return $data;

}
// get day user
function sentius_get_day($user){

   $user = user_load($user);

      if(count($user->field_send_notification)>0){
        $sendnotify  = $user->field_send_notification['und'][0]['value'];
        $day = 0;
        switch ($sendnotify) {
            case "2":
               $day = 7;
                break;
            case "3":
               $day = 30;
                break;
            case "4":
               $day = 0;
                break;
        }
        
      } 
    return $day;  
}


//hook node insert
function sentius_node_insert($node) {
  global $base_url;
 
    if($node->type == 'exhibition'){

        if(count($node->field_artists_featured)>0){
          foreach($node->field_artists_featured['und'] as $row){
                $artist = $row['target_id'];
                $listuser = sentius_getUserFollow($artist);
            
                if(count($listuser)>0){
                  foreach($listuser as $row){
                    $user = user_load($row);
                    if(count($user->field_send_notification)>0){
                      if($user->field_send_notification['und'][0]['value'] == 1 ){

                        $url = $base_url.url("node/".$node->nid);
                        if($node->type == 'news'){
                            $url = $base_url."/news/".$node->nid;
                        }  

                        $create = date('d-m-Y H:i:s',$node->created);

                        $body = "A record <a href='".$url."'>".$node->title."</a> has been created at ".$create."<br/>";


                        sentius_mail_notifi($row,$body);
                        sentius_insert_custom_notify($node->nid,$row,'1');

                      }else{
                        if($user->field_send_notification['und'][0]['value'] != 4){
                          sentius_insert_custom_notify($node->nid,$row,'0');
                        }
                      }
                    }
                  }
                }

          }

           
            



          }

    }

    if($node->type == 'art' or $node->type =='news'){
      if(count($node->field_artist)>0){
        $artist = $node->field_artist['und'][0]['nid'];
       // echo $artist;
        $listuser = sentius_getUserFollow($artist);
        
        if(count($listuser)>0){
          foreach($listuser as $row){
            $user = user_load($row);
            if(count($user->field_send_notification)>0){
              if($user->field_send_notification['und'][0]['value'] == 1 ){

                $url = $base_url.url("node/".$node->nid);
                if($node->type == 'news'){
                    $url = $base_url."/news/".$node->nid;
                }  

                $create = date('d-m-Y H:i:s',$node->created);

                $body = "A record <a href='".$url."'>".$node->title."</a> has been created at ".$create."<br/>";


                sentius_mail_notifi($row,$body);
                sentius_insert_custom_notify($node->nid,$row,'1');

              }else{
                if($user->field_send_notification['und'][0]['value'] != 4){
                  sentius_insert_custom_notify($node->nid,$row,'0');
                }
              }
            }
          }
        }
      }

    }
}

// hook theme
function sentius_theme() {
    return array(
      
      'block_category' => array(
        'variables' => array('data' => NULL),
        'template' => 'templates/block_category'
      ),
      'block_archive_noti' => array(
        'variables' => array('data' => NULL),
        'template' => 'templates/block_archive_noti'
      ),
      'share_templates' => array(
        'variables' => array('data' => NULL),
        'template' => 'templates/share_templates'
      ),
    );
  }
// hook block
  function sentius_block_info() {
    $blocks = array();
    
    $blocks['block_category']['info'] = t('Folder');
    $blocks['block_category']['cache'] = DRUPAL_NO_CACHE;

    $blocks['block_archive_noti']['info'] = t('Archives Notification');
    $blocks['block_archive_noti']['cache'] = DRUPAL_NO_CACHE;
    
    return $blocks;
  }

// send mail cron
  function sentius_send_mail_cron(){
       $userData = sentius_get_user();
      if(count($userData)>0){
          foreach($userData as $row){
            $uid = $row;
            $day = sentius_get_day($uid);
            if($day != 0 ){
              $body = sentius_sendmail_remind($day,$uid);
              // send mail to user;
              sentius_mail_notifi($uid,$body);
              // update after send mail;
        }
      }
     }
  }

// hook block
  function sentius_block_view($delta = '') {
    global $base_url,$user;
    $data = array();
    $block = array();
    switch ($delta) {
      case 'block_archive_noti':

        $data = array();
        $block['content'] = theme('block_archive_noti', array('data' => $data));

      return $block;

      case 'block_category':
      
        $tid = '';
        if(isset($_GET['tid'])){
          $tid = $_GET['tid'];
        }
        $uid = $user->uid;
        if(isset($_GET['uid'])){
          $uid = $_GET['uid'];
        }
        $data = sentius_getALlFavorites($tid,$uid);
        $block['content'] = theme('block_category', array('data' => $data));

      return $block;   
    default:
        break;
    }
  }
function sentius_form_alter(&$form, &$form_state, $form_id){
  
  if($form_id == 'user_register_form' || $form_id == 'user_login_block' || $form_id == 'user_pass'){
    $form['#form_placeholder'] = TRUE;
  }
  if($form_id == 'user_login_block'){
   
    $form['name']['#title'] = 'E-mail address';
   
  }
   if($form_id == 'user_pass'){
   
    $form['name']['#title'] = 'E-mail address';
   
  }
  
}


function sentius_category_form($form, &$form_state) {
  $form['#form_placeholder'] = TRUE;
  $form['category'] = array(
    '#type' => 'textfield', 
    '#title' => 'Folder Name',
    '#required' => TRUE, 
  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create'),
  );
  
  return $form;
}
function sentius_category_form_validate($form, &$form_state) {
      global $user;
      $namefolder = $form_state['values']['category'];

      if($namefolder){
        // check if name folder exits
          $sql = "SELECT count(*) as count FROM 
{taxonomy_term_data} taxonomy_term_data
LEFT JOIN {field_data_field_author} field_data_field_author ON taxonomy_term_data.tid = field_data_field_author.entity_id AND (field_data_field_author.entity_type = 'taxonomy_term' AND field_data_field_author.deleted = '0')
LEFT JOIN {taxonomy_vocabulary} taxonomy_vocabulary ON taxonomy_term_data.vid = taxonomy_vocabulary.vid
WHERE (( (taxonomy_term_data.vid IN  ('12')) AND (field_data_field_author.field_author_value = '".$user->uid."') AND (taxonomy_term_data.name = '".$namefolder."') ))";
          $count = 0 ;
          $query = db_query($sql);
          foreach($query as $row){
            $count = $row->count;
          }
          if($count > 0 ){
            form_set_error('category',t('Folder name exists') );
          }

      }


}

function sentius_category_form_submit($form, &$form_state) {
    global $user;
    $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'tags_artwork'")->fetchField();
    $category = $form_state['values']['category'];
    $newterm = new stdClass();
    $newterm->name = $category;
    $newterm->vid  = $vid;
    $newterm->field_author['und'][0]['value'] = $user->uid;
    taxonomy_term_save($newterm);
   
}