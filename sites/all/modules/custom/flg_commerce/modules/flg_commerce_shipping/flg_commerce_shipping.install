<?php

/**
 * @file
 * Contains update hooks for the commerce_shipping module.
 */

/**
 * Implements hook_schema().
 */
function flg_commerce_shipping_schema() {
  $schema = array();

  $schema['postcode_shipping'] = array(
    'description' => 'Generic postcode table for shipping.',
    'fields' => array(
      'pid' => array(
        'description' => 'Primary Key: Unique postcode ID.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'local' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => ''
      ),
      'area_slug' => array(
        'description' => 'Area of post code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => ''
      ),
      'postcode' => array(
        'description' => '',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
      'price' => array(
        'description' => '',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => ''
      ),
    ),
    'primary key' => array('pid'),
  );

  return $schema;
}

/**
 * Implements hook_install
 */
function flg_commerce_shipping_install() {
  // allow anonymous user to access checkout
  user_role_grant_permissions(
    1,
    array('access checkout')
  );
  user_role_grant_permissions(
    2,
    array('access checkout')
  );

  // create product shipping type field
  $field = field_info_field('field_shipping_type');
  $instance = field_info_instance('node', 'field_shipping_type', 'art');
  if(empty($field)) {
    $field = array(
      'field_name' => 'field_shipping_type',
      'type' => 'list_text',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          'quote' => 'quote'
        )
      )
    );
    field_create_field($field);
  }
  if(empty($instance)) {
    $instance = array(
      'field_name' => 'field_shipping_type',
      'entity_type' => 'node',
      'label' => 'Product Shipping Type',
      'bundle' => 'art',
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'settings' => array(
            'type' => 'hidden',
          )
        )
      )
    );
    field_create_instance($instance);
  }
}

/**
 * Add address field for the commerce_shipping customer profile.
 */
function flg_commerce_shipping_update_7000(&$sandbox) {
  $profile_types = commerce_shipping_commerce_customer_profile_type_info();
  commerce_customer_configure_customer_profile_type($profile_types['shipping']);
  return t('Address field added to commerce shipping customer profile.');
}
